variables: secrets.yml

templates:
  download:
    seen: local
    verify_ssl_certificates: no
    priority: 2
    transmission:
      host: localhost
      port: 9091
      username: '{? transmission.user ?}'
      password: '{? transmission.password ?}'
      addpaused: no

tasks:
  #queue movies from my trakt watchlist
  movie-queue:
    trakt_list:
      username: '{? trakt.user ?}'
      type: movies
      list: watchlist
    accept_all: yes
    list_remove:
      - trakt_list:
          username: '{? trakt.user ?}'
          account: '{? trakt.user ?}'
          list: watchlist
          type: movies
    list_add:
      - movie_list: movies from trakt
    priority: 1
    seen: local

  # download shows from torrent rss feeds
  download-shows:
    template: [download]
    ### Main RSS feed to keep up (showrss.info)
    rss: http://showrss.info/user/{? showrss.user_id ?}.rss?magnets=true&namespaces=true&name=null&quality=null&re=null
    ### Download one show
    #rss: https://zooqle.com/rss/tv/10szttsi26.rss
    #rss: http://showrss.info/show/45.rss

    #html:
    #  url: http://pirateproxy.net/search/the%20great%20british%20bake%20off%20s04*/0/99/0
    #  title_from: url
    #  links_re: [ magnet ]
    #manipulate:
    #  - title:
    #      from: url
    #      extract: '&dn=([^&](/^&)+)'

    all_series: yes
    accept_all: yes
    exists_series:
      allow_different_qualities: better
      path:
        - /data/downloading
        - /data/tv
        - /data/downloads
        - /main/public/TV/{{series_name}}
    priority: 2
    transmission:
      path: /data/tv

  download-movies:
    template: [download]
    discover:
      what:
        - movie_list: movies from trakt
      from:
        #- isohunt: movies
        - rarbg:
        #     #category:
        #     #  - x264 720p
        #     #  - x264 1080p
             sorted_by: seeders
             use_tvdb: false

    list_match:
      from:
        - movie_list: movies from trakt
    quality: 720p+
    imdb_lookup: no
    tmdb_lookup: yes
    #disable: [remember_rejected, retry_failed]
    seen_movies: strict
    regexp:
      reject:
        - \b3D\b: {from: title}
    priority: 2
    transmission:
      path: /data/movies

  subtitles:
    filesystem:
      path: 
        - /data/tv
        - /data/movies
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    regexp:
      reject:
        - \bsample\b: {from: title}
    accept_all: yes
    no_entries_ok: yes
    seen: local
    #disable: [retry_failed]
    subliminal:
      languages:
        - eng
      exact_match: yes
    priority: 3

  sort-shows:
    filesystem:
      path: /data/tv
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    regexp:
      reject:
        - \bsample\b: {from: title}
 
    series:
      settings:
        numeric:
          ep_regexp:
            - (\d\d)(\d\d)
            - (\d)(\d\d)
          parse_only: yes
        sequence:
          identified_by: sequence
      numeric:
        - The Big Bang Theory
        - Better Call Saul
        - Criminal Minds
        - The Simpsons
        - American Dad
        - Family Guy
        - Mr Robot
        - Masters of Sex
        - Greys Anatomy
        - Marvel's Agent Carter
        - Gotham
        - Modern Family
      sequence:
        - Replace Me

    accept_all: yes
    no_entries_ok: yes
    seen: local
    priority: 4
    thetvdb_lookup: yes
    require_field: [series_name, series_season]
    disable: [remember_rejected, retry_failed]
    all_series:
      # for some reason all_series rejects all episodes here, even with seen: local, so parse_only must be added
      parse_only: yes
    copy:
      to: /main/public/TV/{{ series_name }}/Season {{ series_season }}
      # save the file as "Series Name - SxxEyy - Episode Name.ext"
      rename: '{{ tvdb_series_name }} - {{ series_id }} - {{ tvdb_ep_name|default("") }}{{ location | pathext }}'
      along:
        extensions:
          - srt
          - en.srt
          - sub
          - idx
          - nfo

  sort-movies:
    filesystem:
      path: /data/movies
      recursive: yes
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    no_entries_ok: yes
    disable: [retry_failed]
    seen: local
    priority: 4
    imdb_lookup: yes
    tmdb_lookup: yes
    regexp:
      reject:
        - \bsample\b: {from: title}
    require_field: [tmdb_name, movie_year]
    copy:
      to: /main/public/Movies/{{ tmdb_name }} ({{ movie_year }})
      rename: '{{ tmdb_name }} ({{ movie_year }}) - {{ quality }}{{ location | pathext }}'

  clean-transmission:
    manual: yes
    disable: [details]
    clean_transmission:
      host: localhost
      port: 9091
      username: '{? transmission.user ?}'
      password: '{? transmission.password ?}'
      finished_for: 48 hours
      min_ratio: 1
      delete_files: yes

  clean-transmission-tv:
    manual: yes
    rss: http://showrss.info/user/{? showrss.user_id ?}.rss?magnets=true&namespaces=true&name=null&quality=null&re=null
    all_series:
      # for some reason all_series rejects all episodes here, even with seen: local, so parse_only must be added
      parse_only: yes
    #disable: [details]
    seen: local
    seen_info_hash: local
    clean_transmission:
      host: localhost
      port: 9091
      username: '{? transmission.user ?}'
      password: '{? transmission.password ?}'
      finished_for: 24 hours
      min_ratio: 0.9
      delete_files: yes
      directories:
        - \A/+data/+tv(\Z|/+.*)
    exists_series:
      path:
        - /main/public/TV/{{series_name}}

schedules:
  - tasks: 
      - movie-queue
      - download-shows
      - download-movies
      #- subtitles
      - sort-shows
      - sort-movies
    interval:
      hours: 2
